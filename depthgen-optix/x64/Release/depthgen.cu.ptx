//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-24817639
// Cuda compilation tools, release 10.0, V10.0.130
// Based on LLVM 3.4svn
//

.version 6.3
.target sm_35
.address_size 64

	// .globl	__raygen__from_buffer
.const .align 8 .b8 params[24];

.visible .entry __raygen__from_buffer(

)
{
	.reg .f32 	%f<10>;
	.reg .b32 	%r<29>;
	.reg .b64 	%rd<10>;


	// inline asm
	call (%r1), _optix_get_launch_index_x, ();
	// inline asm
	// inline asm
	call (%r2), _optix_get_launch_index_y, ();
	// inline asm
	// inline asm
	call (%r3), _optix_get_launch_index_z, ();
	// inline asm
	// inline asm
	call (%r4), _optix_get_launch_dimension_x, ();
	// inline asm
	// inline asm
	call (%r5), _optix_get_launch_dimension_y, ();
	// inline asm
	mad.lo.s32 	%r22, %r5, %r3, %r2;
	mad.lo.s32 	%r23, %r22, %r4, %r1;
	ld.const.u64 	%rd2, [params+8];
	cvta.to.global.u64 	%rd3, %rd2;
	mul.wide.u32 	%rd4, %r23, 32;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.f32 	%f8, [%rd5+28];
	ld.global.f32 	%f6, [%rd5+24];
	ld.global.f32 	%f5, [%rd5+20];
	ld.global.f32 	%f4, [%rd5+16];
	ld.global.f32 	%f7, [%rd5+12];
	ld.global.f32 	%f3, [%rd5+8];
	ld.global.f32 	%f2, [%rd5+4];
	ld.global.f32 	%f1, [%rd5];
	ld.const.u64 	%rd1, [params];
	mov.u32 	%r15, 1;
	mov.u32 	%r16, 0;
	mov.f32 	%f9, 0f00000000;
	// inline asm
	call (%r7, %r8, %r9, %r10, %r11), _optix_trace_5, (%rd1, %f1, %f2, %f3, %f4, %f5, %f6, %f7, %f8, %f9, %r15, %r16, %r16, %r15, %r16, %r24, %r25, %r26, %r27, %r28);
	// inline asm
	ld.const.u64 	%rd6, [params+16];
	cvta.to.global.u64 	%rd7, %rd6;
	mul.wide.u32 	%rd8, %r23, 20;
	add.s64 	%rd9, %rd7, %rd8;
	st.global.u32 	[%rd9], %r7;
	st.global.u32 	[%rd9+4], %r8;
	st.global.u32 	[%rd9+8], %r9;
	st.global.u32 	[%rd9+12], %r10;
	st.global.u32 	[%rd9+16], %r11;
	ret;
}

	// .globl	__miss__buffer_miss
.visible .entry __miss__buffer_miss(

)
{
	.reg .b32 	%r<6>;


	mov.u32 	%r1, -1082130432;
	// inline asm
	call _optix_set_payload_0, (%r1);
	// inline asm
	mov.u32 	%r2, 1065353216;
	// inline asm
	call _optix_set_payload_1, (%r2);
	// inline asm
	mov.u32 	%r4, 0;
	// inline asm
	call _optix_set_payload_2, (%r4);
	// inline asm
	// inline asm
	call _optix_set_payload_3, (%r4);
	// inline asm
	mov.u32 	%r5, 2012644575;
	// inline asm
	call _optix_set_payload_4, (%r5);
	// inline asm
	ret;
}

	// .globl	__closesthit__buffer_hit
.visible .entry __closesthit__buffer_hit(

)
{
	.reg .pred 	%p<37>;
	.reg .b16 	%rs<14>;
	.reg .f32 	%f<1239>;
	.reg .b32 	%r<500>;
	.reg .b64 	%rd<429>;


	// inline asm
	call (%f441), _optix_get_ray_tmax, ();
	// inline asm
	cvt.rzi.u32.f32	%r1, %f441;
	// inline asm
	call (%rd31), _optix_get_sbt_data_ptr_64, ();
	// inline asm
	ld.u32 	%r23, [%rd31];
	setp.ne.s32	%p1, %r23, 0;
	@%p1 bra 	BB2_67;

	// inline asm
	call (%r24), _optix_read_primitive_idx, ();
	// inline asm
	// inline asm
	call (%f443, %f444), _optix_get_triangle_barycentrics, ();
	// inline asm
	ld.u16 	%rs1, [%rd31+22];
	setp.eq.s16	%p2, %rs1, 4;
	ld.u64 	%rd2, [%rd31+8];
	@%p2 bra 	BB2_3;
	bra.uni 	BB2_2;

BB2_3:
	mul.wide.u32 	%rd38, %r24, 12;
	add.s64 	%rd39, %rd2, %rd38;
	ld.u32 	%r496, [%rd39];
	ld.u32 	%r495, [%rd39+4];
	ld.u32 	%r494, [%rd39+8];
	bra.uni 	BB2_4;

BB2_2:
	mul.lo.s32 	%r25, %r24, 3;
	mul.wide.u32 	%rd32, %r25, 2;
	add.s64 	%rd33, %rd2, %rd32;
	add.s32 	%r26, %r25, 1;
	mul.wide.u32 	%rd34, %r26, 2;
	add.s64 	%rd35, %rd2, %rd34;
	add.s32 	%r27, %r25, 2;
	mul.wide.u32 	%rd36, %r27, 2;
	add.s64 	%rd37, %rd2, %rd36;
	ld.u16 	%r496, [%rd33];
	ld.u16 	%r495, [%rd35];
	ld.u16 	%r494, [%rd37];

BB2_4:
	ld.u16 	%rd40, [%rd31+36];
	setp.eq.s64	%p3, %rd40, 0;
	selp.b64	%rd41, 12, %rd40, %p3;
	cvt.u64.u32	%rd3, %r496;
	mul.lo.s64 	%rd42, %rd41, %rd3;
	ld.u64 	%rd43, [%rd31+24];
	add.s64 	%rd44, %rd42, %rd43;
	cvt.u64.u32	%rd4, %r495;
	mul.lo.s64 	%rd45, %rd41, %rd4;
	add.s64 	%rd46, %rd45, %rd43;
	cvt.u64.u32	%rd5, %r494;
	mul.lo.s64 	%rd47, %rd41, %rd5;
	add.s64 	%rd48, %rd47, %rd43;
	mov.f32 	%f445, 0f3F800000;
	sub.f32 	%f446, %f445, %f443;
	sub.f32 	%f447, %f446, %f444;
	ld.f32 	%f7, [%rd44+8];
	ld.f32 	%f6, [%rd44+4];
	ld.f32 	%f5, [%rd44];
	ld.f32 	%f10, [%rd46+8];
	ld.f32 	%f9, [%rd46+4];
	ld.f32 	%f8, [%rd46];
	mul.f32 	%f448, %f443, %f8;
	mul.f32 	%f449, %f443, %f9;
	mul.f32 	%f450, %f443, %f10;
	fma.rn.f32 	%f451, %f447, %f5, %f448;
	fma.rn.f32 	%f452, %f447, %f6, %f449;
	fma.rn.f32 	%f453, %f447, %f7, %f450;
	ld.f32 	%f13, [%rd48+8];
	ld.f32 	%f12, [%rd48+4];
	ld.f32 	%f11, [%rd48];
	fma.rn.f32 	%f14, %f444, %f11, %f451;
	fma.rn.f32 	%f15, %f444, %f12, %f452;
	fma.rn.f32 	%f1235, %f444, %f13, %f453;
	// inline asm
	call (%r28), _optix_get_transform_list_size, ();
	// inline asm
	setp.eq.s32	%p4, %r28, 0;
	@%p4 bra 	BB2_23;

	// inline asm
	call (%f454), _optix_get_ray_time, ();
	// inline asm
	add.s32 	%r497, %r28, -1;
	setp.lt.s32	%p5, %r497, 0;
	@%p5 bra 	BB2_22;

BB2_6:
	.pragma "nounroll";
	// inline asm
	call (%rd49), _optix_get_transform_list_handle, (%r497);
	// inline asm
	// inline asm
	call (%r30), _optix_get_transform_type_from_handle, (%rd49);
	// inline asm
	and.b32  	%r31, %r30, -2;
	setp.eq.s32	%p6, %r31, 2;
	@%p6 bra 	BB2_12;
	bra.uni 	BB2_7;

BB2_12:
	setp.eq.s32	%p9, %r30, 2;
	@%p9 bra 	BB2_16;
	bra.uni 	BB2_13;

BB2_16:
	// inline asm
	call (%rd123), _optix_get_matrix_motion_transform_from_handle, (%rd49);
	// inline asm
	// inline asm
	cvta.to.global.u64 %rd125, %rd123;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r119,%r120,%r121,%r122}, [%rd125];
	// inline asm
	mov.b32	{%rs4, %rs5}, %r121;
	add.s64 	%rd129, %rd123, 16;
	// inline asm
	cvta.to.global.u64 %rd128, %rd129;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r123,%r124,%r125,%r126}, [%rd128];
	// inline asm
	add.s64 	%rd132, %rd123, 32;
	// inline asm
	cvta.to.global.u64 %rd131, %rd132;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r127,%r128,%r129,%r130}, [%rd131];
	// inline asm
	add.s64 	%rd135, %rd123, 48;
	// inline asm
	cvta.to.global.u64 %rd134, %rd135;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r131,%r132,%r133,%r134}, [%rd134];
	// inline asm
	add.s64 	%rd138, %rd123, 64;
	// inline asm
	cvta.to.global.u64 %rd137, %rd138;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r135,%r136,%r137,%r138}, [%rd137];
	// inline asm
	add.s64 	%rd141, %rd123, 80;
	// inline asm
	cvta.to.global.u64 %rd140, %rd141;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r139,%r140,%r141,%r142}, [%rd140];
	// inline asm
	add.s64 	%rd144, %rd123, 96;
	// inline asm
	cvta.to.global.u64 %rd143, %rd144;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r143,%r144,%r145,%r146}, [%rd143];
	// inline asm
	add.s64 	%rd147, %rd123, 112;
	// inline asm
	cvta.to.global.u64 %rd146, %rd147;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r147,%r148,%r149,%r150}, [%rd146];
	// inline asm
	mov.b32 	 %f581, %r122;
	mov.b32 	 %f582, %r123;
	cvt.u32.u16	%r163, %rs4;
	add.s32 	%r164, %r163, -1;
	cvt.rn.f32.s32	%f583, %r164;
	sub.f32 	%f584, %f454, %f581;
	mul.f32 	%f585, %f584, %f583;
	sub.f32 	%f586, %f582, %f581;
	div.rn.f32 	%f587, %f585, %f586;
	min.f32 	%f588, %f583, %f587;
	mov.f32 	%f589, 0f00000000;
	max.f32 	%f590, %f589, %f588;
	cvt.rmi.f32.f32	%f591, %f590;
	cvt.rzi.s32.f32	%r165, %f591;
	mul.wide.s32 	%rd158, %r165, 48;
	add.s64 	%rd150, %rd132, %rd158;
	// inline asm
	cvta.to.global.u64 %rd149, %rd150;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r151,%r152,%r153,%r154}, [%rd149];
	// inline asm
	mov.b32 	 %f1116, %r151;
	mov.b32 	 %f1117, %r152;
	mov.b32 	 %f1118, %r153;
	mov.b32 	 %f1119, %r154;
	add.s64 	%rd153, %rd150, 16;
	// inline asm
	cvta.to.global.u64 %rd152, %rd153;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r155,%r156,%r157,%r158}, [%rd152];
	// inline asm
	mov.b32 	 %f1112, %r155;
	mov.b32 	 %f1113, %r156;
	mov.b32 	 %f1114, %r157;
	mov.b32 	 %f1115, %r158;
	add.s64 	%rd156, %rd150, 32;
	// inline asm
	cvta.to.global.u64 %rd155, %rd156;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r159,%r160,%r161,%r162}, [%rd155];
	// inline asm
	sub.f32 	%f111, %f590, %f591;
	mov.b32 	 %f1108, %r159;
	mov.b32 	 %f1109, %r160;
	mov.b32 	 %f1110, %r161;
	mov.b32 	 %f1111, %r162;
	setp.leu.f32	%p11, %f111, 0f00000000;
	@%p11 bra 	BB2_18;

	cvt.rmi.f32.f32	%f1079, %f590;
	cvt.rzi.s32.f32	%r493, %f1079;
	cvt.s64.s32	%rd425, %r493;
	mul.lo.s64 	%rd168, %rd425, 48;
	add.s64 	%rd169, %rd123, %rd168;
	add.s64 	%rd160, %rd169, 80;
	// inline asm
	cvta.to.global.u64 %rd159, %rd160;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r166,%r167,%r168,%r169}, [%rd159];
	// inline asm
	mov.b32 	 %f592, %r166;
	mov.b32 	 %f593, %r167;
	mov.b32 	 %f594, %r168;
	mov.b32 	 %f595, %r169;
	add.s64 	%rd163, %rd169, 96;
	// inline asm
	cvta.to.global.u64 %rd162, %rd163;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r170,%r171,%r172,%r173}, [%rd162];
	// inline asm
	mov.b32 	 %f596, %r170;
	mov.b32 	 %f597, %r171;
	mov.b32 	 %f598, %r172;
	mov.b32 	 %f599, %r173;
	add.s64 	%rd166, %rd169, 112;
	// inline asm
	cvta.to.global.u64 %rd165, %rd166;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r174,%r175,%r176,%r177}, [%rd165];
	// inline asm
	mov.f32 	%f600, 0f3F800000;
	sub.f32 	%f601, %f600, %f111;
	mul.f32 	%f602, %f111, %f592;
	mul.f32 	%f603, %f111, %f593;
	mul.f32 	%f604, %f111, %f594;
	mul.f32 	%f605, %f111, %f595;
	fma.rn.f32 	%f1116, %f601, %f1116, %f602;
	fma.rn.f32 	%f1117, %f601, %f1117, %f603;
	fma.rn.f32 	%f1118, %f601, %f1118, %f604;
	fma.rn.f32 	%f1119, %f601, %f1119, %f605;
	mul.f32 	%f606, %f111, %f596;
	mul.f32 	%f607, %f111, %f597;
	mul.f32 	%f608, %f111, %f598;
	mul.f32 	%f609, %f111, %f599;
	fma.rn.f32 	%f1112, %f601, %f1112, %f606;
	fma.rn.f32 	%f1113, %f601, %f1113, %f607;
	fma.rn.f32 	%f1114, %f601, %f1114, %f608;
	fma.rn.f32 	%f1115, %f601, %f1115, %f609;
	mov.b32 	 %f610, %r174;
	mov.b32 	 %f611, %r175;
	mov.b32 	 %f612, %r176;
	mov.b32 	 %f613, %r177;
	mul.f32 	%f614, %f111, %f610;
	mul.f32 	%f615, %f111, %f611;
	mul.f32 	%f616, %f111, %f612;
	mul.f32 	%f617, %f111, %f613;
	fma.rn.f32 	%f1108, %f601, %f1108, %f614;
	fma.rn.f32 	%f1109, %f601, %f1109, %f615;
	fma.rn.f32 	%f1110, %f601, %f1110, %f616;
	fma.rn.f32 	%f1111, %f601, %f1111, %f617;
	bra.uni 	BB2_18;

BB2_7:
	mov.f32 	%f1108, 0f00000000;
	setp.eq.s32	%p7, %r30, 4;
	@%p7 bra 	BB2_10;
	bra.uni 	BB2_8;

BB2_10:
	// inline asm
	call (%rd426), _optix_get_instance_transform_from_handle, (%rd49);
	// inline asm
	bra.uni 	BB2_11;

BB2_13:
	// inline asm
	call (%rd64), _optix_get_srt_motion_transform_from_handle, (%rd49);
	// inline asm
	// inline asm
	cvta.to.global.u64 %rd66, %rd64;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r44,%r45,%r46,%r47}, [%rd66];
	// inline asm
	mov.b32	{%rs2, %rs3}, %r46;
	add.s64 	%rd70, %rd64, 16;
	// inline asm
	cvta.to.global.u64 %rd69, %rd70;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r48,%r49,%r50,%r51}, [%rd69];
	// inline asm
	add.s64 	%rd73, %rd64, 32;
	// inline asm
	cvta.to.global.u64 %rd72, %rd73;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r52,%r53,%r54,%r55}, [%rd72];
	// inline asm
	add.s64 	%rd76, %rd64, 48;
	// inline asm
	cvta.to.global.u64 %rd75, %rd76;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r56,%r57,%r58,%r59}, [%rd75];
	// inline asm
	add.s64 	%rd79, %rd64, 64;
	// inline asm
	cvta.to.global.u64 %rd78, %rd79;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r60,%r61,%r62,%r63}, [%rd78];
	// inline asm
	add.s64 	%rd82, %rd64, 80;
	// inline asm
	cvta.to.global.u64 %rd81, %rd82;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r64,%r65,%r66,%r67}, [%rd81];
	// inline asm
	add.s64 	%rd85, %rd64, 96;
	// inline asm
	cvta.to.global.u64 %rd84, %rd85;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r68,%r69,%r70,%r71}, [%rd84];
	// inline asm
	add.s64 	%rd88, %rd64, 112;
	// inline asm
	cvta.to.global.u64 %rd87, %rd88;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r72,%r73,%r74,%r75}, [%rd87];
	// inline asm
	add.s64 	%rd91, %rd64, 128;
	// inline asm
	cvta.to.global.u64 %rd90, %rd91;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r76,%r77,%r78,%r79}, [%rd90];
	// inline asm
	add.s64 	%rd94, %rd64, 144;
	// inline asm
	cvta.to.global.u64 %rd93, %rd94;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r80,%r81,%r82,%r83}, [%rd93];
	// inline asm
	mov.b32 	 %f468, %r47;
	mov.b32 	 %f469, %r48;
	cvt.u32.u16	%r100, %rs2;
	add.s32 	%r101, %r100, -1;
	cvt.rn.f32.s32	%f470, %r101;
	sub.f32 	%f471, %f454, %f468;
	mul.f32 	%f472, %f471, %f470;
	sub.f32 	%f473, %f469, %f468;
	div.rn.f32 	%f474, %f472, %f473;
	min.f32 	%f475, %f470, %f474;
	mov.f32 	%f476, 0f00000000;
	max.f32 	%f477, %f476, %f475;
	cvt.rmi.f32.f32	%f478, %f477;
	cvt.rzi.s32.f32	%r102, %f478;
	mul.wide.s32 	%rd108, %r102, 64;
	add.s64 	%rd97, %rd73, %rd108;
	// inline asm
	cvta.to.global.u64 %rd96, %rd97;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r84,%r85,%r86,%r87}, [%rd96];
	// inline asm
	mov.b32 	 %f1092, %r84;
	mov.b32 	 %f1093, %r85;
	mov.b32 	 %f1094, %r86;
	mov.b32 	 %f1095, %r87;
	add.s64 	%rd100, %rd97, 16;
	// inline asm
	cvta.to.global.u64 %rd99, %rd100;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r88,%r89,%r90,%r91}, [%rd99];
	// inline asm
	mov.b32 	 %f1096, %r88;
	mov.b32 	 %f1097, %r89;
	mov.b32 	 %f1098, %r90;
	mov.b32 	 %f1099, %r91;
	add.s64 	%rd103, %rd97, 32;
	// inline asm
	cvta.to.global.u64 %rd102, %rd103;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r92,%r93,%r94,%r95}, [%rd102];
	// inline asm
	sub.f32 	%f50, %f477, %f478;
	mov.b32 	 %f1100, %r92;
	mov.b32 	 %f1101, %r93;
	mov.b32 	 %f1102, %r94;
	mov.b32 	 %f1103, %r95;
	add.s64 	%rd106, %rd97, 48;
	// inline asm
	cvta.to.global.u64 %rd105, %rd106;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r96,%r97,%r98,%r99}, [%rd105];
	// inline asm
	mov.b32 	 %f1104, %r96;
	mov.b32 	 %f1105, %r97;
	mov.b32 	 %f1106, %r98;
	mov.b32 	 %f1107, %r99;
	setp.leu.f32	%p10, %f50, 0f00000000;
	@%p10 bra 	BB2_15;

	cvt.rmi.f32.f32	%f1078, %f477;
	cvt.rzi.s32.f32	%r492, %f1078;
	cvt.s64.s32	%rd424, %r492;
	shl.b64 	%rd121, %rd424, 6;
	add.s64 	%rd122, %rd121, %rd64;
	add.s64 	%rd110, %rd122, 96;
	// inline asm
	cvta.to.global.u64 %rd109, %rd110;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r103,%r104,%r105,%r106}, [%rd109];
	// inline asm
	mov.b32 	 %f479, %r103;
	mov.b32 	 %f480, %r104;
	mov.b32 	 %f481, %r105;
	mov.b32 	 %f482, %r106;
	add.s64 	%rd113, %rd122, 112;
	// inline asm
	cvta.to.global.u64 %rd112, %rd113;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r107,%r108,%r109,%r110}, [%rd112];
	// inline asm
	mov.b32 	 %f483, %r107;
	mov.b32 	 %f484, %r108;
	mov.b32 	 %f485, %r109;
	mov.b32 	 %f486, %r110;
	add.s64 	%rd116, %rd122, 128;
	// inline asm
	cvta.to.global.u64 %rd115, %rd116;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r111,%r112,%r113,%r114}, [%rd115];
	// inline asm
	mov.b32 	 %f487, %r111;
	mov.b32 	 %f488, %r112;
	mov.b32 	 %f489, %r113;
	mov.b32 	 %f490, %r114;
	add.s64 	%rd119, %rd122, 144;
	// inline asm
	cvta.to.global.u64 %rd118, %rd119;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r115,%r116,%r117,%r118}, [%rd118];
	// inline asm
	mov.f32 	%f491, 0f3F800000;
	sub.f32 	%f492, %f491, %f50;
	mul.f32 	%f493, %f50, %f479;
	mul.f32 	%f494, %f50, %f480;
	mul.f32 	%f495, %f50, %f481;
	mul.f32 	%f496, %f50, %f482;
	fma.rn.f32 	%f1092, %f492, %f1092, %f493;
	fma.rn.f32 	%f1093, %f492, %f1093, %f494;
	fma.rn.f32 	%f1094, %f492, %f1094, %f495;
	fma.rn.f32 	%f1095, %f492, %f1095, %f496;
	mul.f32 	%f497, %f50, %f483;
	mul.f32 	%f498, %f50, %f484;
	mul.f32 	%f499, %f50, %f485;
	mul.f32 	%f500, %f50, %f486;
	fma.rn.f32 	%f1096, %f492, %f1096, %f497;
	fma.rn.f32 	%f1097, %f492, %f1097, %f498;
	fma.rn.f32 	%f1098, %f492, %f1098, %f499;
	fma.rn.f32 	%f1099, %f492, %f1099, %f500;
	mul.f32 	%f501, %f50, %f487;
	mul.f32 	%f502, %f50, %f488;
	mul.f32 	%f503, %f50, %f489;
	mul.f32 	%f504, %f50, %f490;
	fma.rn.f32 	%f1100, %f492, %f1100, %f501;
	fma.rn.f32 	%f505, %f492, %f1101, %f502;
	fma.rn.f32 	%f506, %f492, %f1102, %f503;
	fma.rn.f32 	%f507, %f492, %f1103, %f504;
	mov.b32 	 %f508, %r115;
	mov.b32 	 %f509, %r116;
	mov.b32 	 %f510, %r117;
	mov.b32 	 %f511, %r118;
	mul.f32 	%f512, %f50, %f508;
	mul.f32 	%f513, %f50, %f509;
	mul.f32 	%f514, %f50, %f510;
	mul.f32 	%f515, %f50, %f511;
	fma.rn.f32 	%f516, %f492, %f1104, %f512;
	fma.rn.f32 	%f1105, %f492, %f1105, %f513;
	fma.rn.f32 	%f1106, %f492, %f1106, %f514;
	fma.rn.f32 	%f1107, %f492, %f1107, %f515;
	mul.f32 	%f517, %f506, %f506;
	fma.rn.f32 	%f518, %f505, %f505, %f517;
	fma.rn.f32 	%f519, %f507, %f507, %f518;
	fma.rn.f32 	%f520, %f516, %f516, %f519;
	sqrt.rn.f32 	%f521, %f520;
	rcp.rn.f32 	%f522, %f521;
	mul.f32 	%f1101, %f505, %f522;
	mul.f32 	%f1102, %f506, %f522;
	mul.f32 	%f1103, %f507, %f522;
	mul.f32 	%f1104, %f516, %f522;

BB2_15:
	mul.f32 	%f523, %f1102, %f1102;
	fma.rn.f32 	%f524, %f1101, %f1101, %f523;
	fma.rn.f32 	%f525, %f1103, %f1103, %f524;
	fma.rn.f32 	%f526, %f1104, %f1104, %f525;
	rcp.rn.f32 	%f527, %f526;
	mul.f32 	%f528, %f1101, %f527;
	mul.f32 	%f529, %f1102, %f527;
	mul.f32 	%f530, %f1103, %f527;
	mul.f32 	%f531, %f1104, %f527;
	mul.f32 	%f532, %f1101, %f528;
	mul.f32 	%f533, %f1102, %f529;
	mul.f32 	%f534, %f1103, %f530;
	mul.f32 	%f535, %f1101, %f529;
	mul.f32 	%f536, %f1103, %f531;
	mul.f32 	%f537, %f1101, %f530;
	mul.f32 	%f538, %f1102, %f531;
	mul.f32 	%f539, %f1102, %f530;
	mul.f32 	%f540, %f1101, %f531;
	sub.f32 	%f541, %f532, %f533;
	sub.f32 	%f542, %f541, %f534;
	fma.rn.f32 	%f543, %f1104, %f531, %f542;
	sub.f32 	%f544, %f535, %f536;
	add.f32 	%f545, %f544, %f544;
	add.f32 	%f546, %f537, %f538;
	add.f32 	%f547, %f546, %f546;
	add.f32 	%f548, %f535, %f536;
	add.f32 	%f549, %f548, %f548;
	sub.f32 	%f550, %f533, %f532;
	sub.f32 	%f551, %f550, %f534;
	fma.rn.f32 	%f552, %f1104, %f531, %f551;
	sub.f32 	%f553, %f539, %f540;
	add.f32 	%f554, %f553, %f553;
	sub.f32 	%f555, %f537, %f538;
	add.f32 	%f556, %f555, %f555;
	add.f32 	%f557, %f539, %f540;
	add.f32 	%f558, %f557, %f557;
	neg.f32 	%f559, %f532;
	sub.f32 	%f560, %f559, %f533;
	add.f32 	%f561, %f534, %f560;
	fma.rn.f32 	%f562, %f1104, %f531, %f561;
	mul.f32 	%f563, %f1095, %f543;
	fma.rn.f32 	%f564, %f1098, %f545, %f563;
	fma.rn.f32 	%f565, %f1100, %f547, %f564;
	sub.f32 	%f1119, %f1105, %f565;
	mul.f32 	%f566, %f1098, %f552;
	fma.rn.f32 	%f567, %f1095, %f549, %f566;
	fma.rn.f32 	%f568, %f1100, %f554, %f567;
	sub.f32 	%f1115, %f1106, %f568;
	mul.f32 	%f569, %f1098, %f558;
	fma.rn.f32 	%f570, %f1095, %f556, %f569;
	fma.rn.f32 	%f571, %f1100, %f562, %f570;
	sub.f32 	%f1111, %f1107, %f571;
	mul.f32 	%f572, %f1094, %f543;
	fma.rn.f32 	%f573, %f1097, %f545, %f572;
	fma.rn.f32 	%f1118, %f1099, %f547, %f573;
	mul.f32 	%f574, %f1097, %f552;
	fma.rn.f32 	%f575, %f1094, %f549, %f574;
	fma.rn.f32 	%f1114, %f1099, %f554, %f575;
	mul.f32 	%f576, %f1097, %f558;
	fma.rn.f32 	%f577, %f1094, %f556, %f576;
	fma.rn.f32 	%f1110, %f1099, %f562, %f577;
	mul.f32 	%f578, %f1093, %f543;
	fma.rn.f32 	%f1117, %f1096, %f545, %f578;
	mul.f32 	%f579, %f1096, %f552;
	fma.rn.f32 	%f1113, %f1093, %f549, %f579;
	mul.f32 	%f580, %f1096, %f558;
	fma.rn.f32 	%f1109, %f1093, %f556, %f580;
	mul.f32 	%f1116, %f1092, %f543;
	mul.f32 	%f1112, %f1092, %f549;
	mul.f32 	%f1108, %f1092, %f556;
	bra.uni 	BB2_18;

BB2_8:
	setp.ne.s32	%p8, %r30, 1;
	mov.f32 	%f1109, %f1108;
	mov.f32 	%f1110, %f445;
	mov.f32 	%f1111, %f1108;
	mov.f32 	%f1112, %f1108;
	mov.f32 	%f1113, %f445;
	mov.f32 	%f1114, %f1108;
	mov.f32 	%f1115, %f1108;
	mov.f32 	%f1116, %f445;
	mov.f32 	%f1117, %f1108;
	mov.f32 	%f1118, %f1108;
	mov.f32 	%f1119, %f1108;
	@%p8 bra 	BB2_18;

	// inline asm
	call (%rd51), _optix_get_static_transform_from_handle, (%rd49);
	// inline asm
	add.s64 	%rd426, %rd51, 16;

BB2_11:
	// inline asm
	cvta.to.global.u64 %rd55, %rd426;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r32,%r33,%r34,%r35}, [%rd55];
	// inline asm
	mov.b32 	 %f1116, %r32;
	mov.b32 	 %f1117, %r33;
	mov.b32 	 %f1118, %r34;
	mov.b32 	 %f1119, %r35;
	add.s64 	%rd59, %rd426, 16;
	// inline asm
	cvta.to.global.u64 %rd58, %rd59;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r36,%r37,%r38,%r39}, [%rd58];
	// inline asm
	mov.b32 	 %f1112, %r36;
	mov.b32 	 %f1113, %r37;
	mov.b32 	 %f1114, %r38;
	mov.b32 	 %f1115, %r39;
	add.s64 	%rd62, %rd426, 32;
	// inline asm
	cvta.to.global.u64 %rd61, %rd62;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r40,%r41,%r42,%r43}, [%rd61];
	// inline asm
	mov.b32 	 %f1108, %r40;
	mov.b32 	 %f1109, %r41;
	mov.b32 	 %f1110, %r42;
	mov.b32 	 %f1111, %r43;

BB2_18:
	add.s32 	%r178, %r497, 1;
	setp.eq.s32	%p12, %r178, %r28;
	@%p12 bra 	BB2_19;
	bra.uni 	BB2_20;

BB2_19:
	mov.f32 	%f1091, %f1108;
	mov.f32 	%f1090, %f1109;
	mov.f32 	%f1089, %f1110;
	mov.f32 	%f1088, %f1111;
	mov.f32 	%f1087, %f1112;
	mov.f32 	%f1086, %f1113;
	mov.f32 	%f1085, %f1114;
	mov.f32 	%f1084, %f1115;
	mov.f32 	%f1083, %f1116;
	mov.f32 	%f1082, %f1117;
	mov.f32 	%f1081, %f1118;
	mov.f32 	%f1080, %f1119;
	bra.uni 	BB2_21;

BB2_20:
	mul.f32 	%f618, %f1087, %f1117;
	fma.rn.f32 	%f619, %f1083, %f1116, %f618;
	fma.rn.f32 	%f140, %f1091, %f1118, %f619;
	mul.f32 	%f620, %f1086, %f1117;
	fma.rn.f32 	%f621, %f1082, %f1116, %f620;
	fma.rn.f32 	%f141, %f1090, %f1118, %f621;
	mul.f32 	%f622, %f1085, %f1117;
	fma.rn.f32 	%f623, %f1081, %f1116, %f622;
	fma.rn.f32 	%f142, %f1089, %f1118, %f623;
	mul.f32 	%f624, %f1084, %f1117;
	fma.rn.f32 	%f625, %f1080, %f1116, %f624;
	fma.rn.f32 	%f626, %f1088, %f1118, %f625;
	add.f32 	%f143, %f1119, %f626;
	mul.f32 	%f627, %f1087, %f1113;
	fma.rn.f32 	%f628, %f1083, %f1112, %f627;
	fma.rn.f32 	%f144, %f1091, %f1114, %f628;
	mul.f32 	%f629, %f1086, %f1113;
	fma.rn.f32 	%f630, %f1082, %f1112, %f629;
	fma.rn.f32 	%f145, %f1090, %f1114, %f630;
	mul.f32 	%f631, %f1085, %f1113;
	fma.rn.f32 	%f632, %f1081, %f1112, %f631;
	fma.rn.f32 	%f146, %f1089, %f1114, %f632;
	mul.f32 	%f633, %f1084, %f1113;
	fma.rn.f32 	%f634, %f1080, %f1112, %f633;
	fma.rn.f32 	%f635, %f1088, %f1114, %f634;
	add.f32 	%f147, %f1115, %f635;
	mul.f32 	%f636, %f1087, %f1109;
	fma.rn.f32 	%f637, %f1083, %f1108, %f636;
	fma.rn.f32 	%f1091, %f1091, %f1110, %f637;
	mul.f32 	%f638, %f1086, %f1109;
	fma.rn.f32 	%f639, %f1082, %f1108, %f638;
	fma.rn.f32 	%f1090, %f1090, %f1110, %f639;
	mul.f32 	%f640, %f1085, %f1109;
	fma.rn.f32 	%f641, %f1081, %f1108, %f640;
	fma.rn.f32 	%f1089, %f1089, %f1110, %f641;
	mul.f32 	%f642, %f1084, %f1109;
	fma.rn.f32 	%f643, %f1080, %f1108, %f642;
	fma.rn.f32 	%f644, %f1088, %f1110, %f643;
	add.f32 	%f1088, %f1111, %f644;
	mov.f32 	%f1087, %f144;
	mov.f32 	%f1086, %f145;
	mov.f32 	%f1085, %f146;
	mov.f32 	%f1084, %f147;
	mov.f32 	%f1083, %f140;
	mov.f32 	%f1082, %f141;
	mov.f32 	%f1081, %f142;
	mov.f32 	%f1080, %f143;

BB2_21:
	add.s32 	%r497, %r497, -1;
	setp.gt.s32	%p13, %r497, -1;
	@%p13 bra 	BB2_6;

BB2_22:
	mul.f32 	%f645, %f15, %f1090;
	fma.rn.f32 	%f646, %f14, %f1091, %f645;
	fma.rn.f32 	%f647, %f1235, %f1089, %f646;
	add.f32 	%f1235, %f1088, %f647;

BB2_23:
	setp.eq.s32	%p35, %r28, 0;
	sub.f32 	%f648, %f13, %f7;
	sub.f32 	%f649, %f9, %f6;
	mul.f32 	%f650, %f649, %f648;
	sub.f32 	%f651, %f12, %f6;
	sub.f32 	%f652, %f10, %f7;
	mul.f32 	%f653, %f652, %f651;
	sub.f32 	%f654, %f650, %f653;
	sub.f32 	%f655, %f11, %f5;
	mul.f32 	%f656, %f652, %f655;
	sub.f32 	%f657, %f8, %f5;
	mul.f32 	%f658, %f657, %f648;
	sub.f32 	%f659, %f656, %f658;
	mul.f32 	%f660, %f657, %f651;
	mul.f32 	%f661, %f649, %f655;
	sub.f32 	%f662, %f660, %f661;
	mul.f32 	%f663, %f659, %f659;
	fma.rn.f32 	%f664, %f654, %f654, %f663;
	fma.rn.f32 	%f665, %f662, %f662, %f664;
	sqrt.rn.f32 	%f666, %f665;
	rcp.rn.f32 	%f667, %f666;
	mul.f32 	%f170, %f654, %f667;
	mul.f32 	%f171, %f659, %f667;
	mul.f32 	%f1238, %f662, %f667;
	@%p35 bra 	BB2_24;

	mov.u32 	%r498, 0;
	// inline asm
	call (%f668), _optix_get_ray_time, ();
	// inline asm

BB2_26:
	.pragma "nounroll";
	// inline asm
	call (%rd170), _optix_get_transform_list_handle, (%r498);
	// inline asm
	// inline asm
	call (%r181), _optix_get_transform_type_from_handle, (%rd170);
	// inline asm
	and.b32  	%r182, %r181, -2;
	setp.eq.s32	%p15, %r182, 2;
	@%p15 bra 	BB2_32;
	bra.uni 	BB2_27;

BB2_32:
	setp.eq.s32	%p18, %r181, 2;
	@%p18 bra 	BB2_36;
	bra.uni 	BB2_33;

BB2_36:
	// inline asm
	call (%rd244), _optix_get_matrix_motion_transform_from_handle, (%rd170);
	// inline asm
	// inline asm
	cvta.to.global.u64 %rd246, %rd244;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r270,%r271,%r272,%r273}, [%rd246];
	// inline asm
	mov.b32	{%rs8, %rs9}, %r272;
	add.s64 	%rd250, %rd244, 16;
	// inline asm
	cvta.to.global.u64 %rd249, %rd250;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r274,%r275,%r276,%r277}, [%rd249];
	// inline asm
	add.s64 	%rd253, %rd244, 32;
	// inline asm
	cvta.to.global.u64 %rd252, %rd253;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r278,%r279,%r280,%r281}, [%rd252];
	// inline asm
	add.s64 	%rd256, %rd244, 48;
	// inline asm
	cvta.to.global.u64 %rd255, %rd256;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r282,%r283,%r284,%r285}, [%rd255];
	// inline asm
	add.s64 	%rd259, %rd244, 64;
	// inline asm
	cvta.to.global.u64 %rd258, %rd259;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r286,%r287,%r288,%r289}, [%rd258];
	// inline asm
	add.s64 	%rd262, %rd244, 80;
	// inline asm
	cvta.to.global.u64 %rd261, %rd262;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r290,%r291,%r292,%r293}, [%rd261];
	// inline asm
	add.s64 	%rd265, %rd244, 96;
	// inline asm
	cvta.to.global.u64 %rd264, %rd265;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r294,%r295,%r296,%r297}, [%rd264];
	// inline asm
	add.s64 	%rd268, %rd244, 112;
	// inline asm
	cvta.to.global.u64 %rd267, %rd268;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r298,%r299,%r300,%r301}, [%rd267];
	// inline asm
	mov.b32 	 %f771, %r273;
	mov.b32 	 %f772, %r274;
	cvt.u32.u16	%r314, %rs8;
	add.s32 	%r315, %r314, -1;
	cvt.rn.f32.s32	%f773, %r315;
	sub.f32 	%f774, %f668, %f771;
	mul.f32 	%f775, %f774, %f773;
	sub.f32 	%f776, %f772, %f771;
	div.rn.f32 	%f777, %f775, %f776;
	min.f32 	%f778, %f773, %f777;
	mov.f32 	%f779, 0f00000000;
	max.f32 	%f780, %f779, %f778;
	cvt.rmi.f32.f32	%f781, %f780;
	cvt.rzi.s32.f32	%r316, %f781;
	cvt.s64.s32	%rd21, %r316;
	mul.wide.s32 	%rd279, %r316, 48;
	add.s64 	%rd271, %rd253, %rd279;
	// inline asm
	cvta.to.global.u64 %rd270, %rd271;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r302,%r303,%r304,%r305}, [%rd270];
	// inline asm
	mov.b32 	 %f1162, %r302;
	mov.b32 	 %f1163, %r303;
	mov.b32 	 %f1164, %r304;
	add.s64 	%rd274, %rd271, 16;
	// inline asm
	cvta.to.global.u64 %rd273, %rd274;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r306,%r307,%r308,%r309}, [%rd273];
	// inline asm
	mov.b32 	 %f1159, %r306;
	mov.b32 	 %f1160, %r307;
	mov.b32 	 %f1161, %r308;
	add.s64 	%rd277, %rd271, 32;
	// inline asm
	cvta.to.global.u64 %rd276, %rd277;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r310,%r311,%r312,%r313}, [%rd276];
	// inline asm
	sub.f32 	%f238, %f780, %f781;
	mov.b32 	 %f1156, %r310;
	mov.b32 	 %f1157, %r311;
	mov.b32 	 %f1158, %r312;
	setp.leu.f32	%p20, %f238, 0f00000000;
	@%p20 bra 	BB2_38;

	mul.lo.s64 	%rd289, %rd21, 48;
	add.s64 	%rd290, %rd244, %rd289;
	add.s64 	%rd281, %rd290, 80;
	// inline asm
	cvta.to.global.u64 %rd280, %rd281;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r317,%r318,%r319,%r320}, [%rd280];
	// inline asm
	mov.b32 	 %f782, %r317;
	mov.b32 	 %f783, %r318;
	mov.b32 	 %f784, %r319;
	add.s64 	%rd284, %rd290, 96;
	// inline asm
	cvta.to.global.u64 %rd283, %rd284;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r321,%r322,%r323,%r324}, [%rd283];
	// inline asm
	mov.b32 	 %f785, %r321;
	mov.b32 	 %f786, %r322;
	mov.b32 	 %f787, %r323;
	add.s64 	%rd287, %rd290, 112;
	// inline asm
	cvta.to.global.u64 %rd286, %rd287;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r325,%r326,%r327,%r328}, [%rd286];
	// inline asm
	mov.f32 	%f788, 0f3F800000;
	sub.f32 	%f789, %f788, %f238;
	mul.f32 	%f790, %f238, %f782;
	mul.f32 	%f791, %f238, %f783;
	mul.f32 	%f792, %f238, %f784;
	fma.rn.f32 	%f1162, %f789, %f1162, %f790;
	fma.rn.f32 	%f1163, %f789, %f1163, %f791;
	fma.rn.f32 	%f1164, %f789, %f1164, %f792;
	mul.f32 	%f793, %f238, %f785;
	mul.f32 	%f794, %f238, %f786;
	mul.f32 	%f795, %f238, %f787;
	fma.rn.f32 	%f1159, %f789, %f1159, %f793;
	fma.rn.f32 	%f1160, %f789, %f1160, %f794;
	fma.rn.f32 	%f1161, %f789, %f1161, %f795;
	mov.b32 	 %f796, %r325;
	mov.b32 	 %f797, %r326;
	mov.b32 	 %f798, %r327;
	mul.f32 	%f799, %f238, %f796;
	mul.f32 	%f800, %f238, %f797;
	mul.f32 	%f801, %f238, %f798;
	fma.rn.f32 	%f1156, %f789, %f1156, %f799;
	fma.rn.f32 	%f1157, %f789, %f1157, %f800;
	fma.rn.f32 	%f1158, %f789, %f1158, %f801;
	bra.uni 	BB2_38;

BB2_27:
	mov.f32 	%f1165, 0f00000000;
	mov.f32 	%f1167, 0f3F800000;
	setp.eq.s32	%p16, %r181, 4;
	@%p16 bra 	BB2_30;
	bra.uni 	BB2_28;

BB2_30:
	// inline asm
	call (%rd427), _optix_get_instance_inverse_transform_from_handle, (%rd170);
	// inline asm
	bra.uni 	BB2_31;

BB2_33:
	// inline asm
	call (%rd185), _optix_get_srt_motion_transform_from_handle, (%rd170);
	// inline asm
	// inline asm
	cvta.to.global.u64 %rd187, %rd185;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r195,%r196,%r197,%r198}, [%rd187];
	// inline asm
	mov.b32	{%rs6, %rs7}, %r197;
	add.s64 	%rd191, %rd185, 16;
	// inline asm
	cvta.to.global.u64 %rd190, %rd191;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r199,%r200,%r201,%r202}, [%rd190];
	// inline asm
	add.s64 	%rd194, %rd185, 32;
	// inline asm
	cvta.to.global.u64 %rd193, %rd194;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r203,%r204,%r205,%r206}, [%rd193];
	// inline asm
	add.s64 	%rd197, %rd185, 48;
	// inline asm
	cvta.to.global.u64 %rd196, %rd197;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r207,%r208,%r209,%r210}, [%rd196];
	// inline asm
	add.s64 	%rd200, %rd185, 64;
	// inline asm
	cvta.to.global.u64 %rd199, %rd200;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r211,%r212,%r213,%r214}, [%rd199];
	// inline asm
	add.s64 	%rd203, %rd185, 80;
	// inline asm
	cvta.to.global.u64 %rd202, %rd203;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r215,%r216,%r217,%r218}, [%rd202];
	// inline asm
	add.s64 	%rd206, %rd185, 96;
	// inline asm
	cvta.to.global.u64 %rd205, %rd206;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r219,%r220,%r221,%r222}, [%rd205];
	// inline asm
	add.s64 	%rd209, %rd185, 112;
	// inline asm
	cvta.to.global.u64 %rd208, %rd209;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r223,%r224,%r225,%r226}, [%rd208];
	// inline asm
	add.s64 	%rd212, %rd185, 128;
	// inline asm
	cvta.to.global.u64 %rd211, %rd212;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r227,%r228,%r229,%r230}, [%rd211];
	// inline asm
	add.s64 	%rd215, %rd185, 144;
	// inline asm
	cvta.to.global.u64 %rd214, %rd215;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r231,%r232,%r233,%r234}, [%rd214];
	// inline asm
	mov.b32 	 %f679, %r198;
	mov.b32 	 %f680, %r199;
	cvt.u32.u16	%r251, %rs6;
	add.s32 	%r252, %r251, -1;
	cvt.rn.f32.s32	%f681, %r252;
	sub.f32 	%f682, %f668, %f679;
	mul.f32 	%f683, %f682, %f681;
	sub.f32 	%f684, %f680, %f679;
	div.rn.f32 	%f685, %f683, %f684;
	min.f32 	%f686, %f681, %f685;
	mov.f32 	%f687, 0f00000000;
	max.f32 	%f688, %f687, %f686;
	cvt.rmi.f32.f32	%f689, %f688;
	cvt.rzi.s32.f32	%r253, %f689;
	cvt.s64.s32	%rd19, %r253;
	mul.wide.s32 	%rd229, %r253, 64;
	add.s64 	%rd218, %rd194, %rd229;
	// inline asm
	cvta.to.global.u64 %rd217, %rd218;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r235,%r236,%r237,%r238}, [%rd217];
	// inline asm
	mov.b32 	 %f1146, %r235;
	mov.b32 	 %f1147, %r236;
	mov.b32 	 %f1148, %r237;
	add.s64 	%rd221, %rd218, 16;
	// inline asm
	cvta.to.global.u64 %rd220, %rd221;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r239,%r240,%r241,%r242}, [%rd220];
	// inline asm
	mov.b32 	 %f1149, %r239;
	mov.b32 	 %f1150, %r240;
	mov.b32 	 %f1151, %r242;
	add.s64 	%rd224, %rd218, 32;
	// inline asm
	cvta.to.global.u64 %rd223, %rd224;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r243,%r244,%r245,%r246}, [%rd223];
	// inline asm
	sub.f32 	%f198, %f688, %f689;
	mov.b32 	 %f1152, %r244;
	mov.b32 	 %f1153, %r245;
	mov.b32 	 %f1154, %r246;
	add.s64 	%rd227, %rd218, 48;
	// inline asm
	cvta.to.global.u64 %rd226, %rd227;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r247,%r248,%r249,%r250}, [%rd226];
	// inline asm
	mov.b32 	 %f1155, %r247;
	setp.leu.f32	%p19, %f198, 0f00000000;
	@%p19 bra 	BB2_35;

	shl.b64 	%rd242, %rd19, 6;
	add.s64 	%rd243, %rd242, %rd185;
	add.s64 	%rd231, %rd243, 96;
	// inline asm
	cvta.to.global.u64 %rd230, %rd231;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r254,%r255,%r256,%r257}, [%rd230];
	// inline asm
	mov.b32 	 %f690, %r254;
	mov.b32 	 %f691, %r255;
	mov.b32 	 %f692, %r256;
	add.s64 	%rd234, %rd243, 112;
	// inline asm
	cvta.to.global.u64 %rd233, %rd234;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r258,%r259,%r260,%r261}, [%rd233];
	// inline asm
	mov.b32 	 %f693, %r258;
	mov.b32 	 %f694, %r259;
	mov.b32 	 %f695, %r261;
	add.s64 	%rd237, %rd243, 128;
	// inline asm
	cvta.to.global.u64 %rd236, %rd237;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r262,%r263,%r264,%r265}, [%rd236];
	// inline asm
	mov.b32 	 %f696, %r263;
	mov.b32 	 %f697, %r264;
	mov.b32 	 %f698, %r265;
	add.s64 	%rd240, %rd243, 144;
	// inline asm
	cvta.to.global.u64 %rd239, %rd240;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r266,%r267,%r268,%r269}, [%rd239];
	// inline asm
	mov.f32 	%f699, 0f3F800000;
	sub.f32 	%f700, %f699, %f198;
	mul.f32 	%f701, %f198, %f690;
	mul.f32 	%f702, %f198, %f691;
	mul.f32 	%f703, %f198, %f692;
	fma.rn.f32 	%f1146, %f700, %f1146, %f701;
	fma.rn.f32 	%f1147, %f700, %f1147, %f702;
	fma.rn.f32 	%f1148, %f700, %f1148, %f703;
	mul.f32 	%f704, %f198, %f693;
	mul.f32 	%f705, %f198, %f694;
	mul.f32 	%f706, %f198, %f695;
	fma.rn.f32 	%f1149, %f700, %f1149, %f704;
	fma.rn.f32 	%f1150, %f700, %f1150, %f705;
	fma.rn.f32 	%f1151, %f700, %f1151, %f706;
	mul.f32 	%f707, %f198, %f696;
	mul.f32 	%f708, %f198, %f697;
	mul.f32 	%f709, %f198, %f698;
	fma.rn.f32 	%f710, %f700, %f1152, %f707;
	fma.rn.f32 	%f711, %f700, %f1153, %f708;
	fma.rn.f32 	%f712, %f700, %f1154, %f709;
	mov.b32 	 %f713, %r266;
	mul.f32 	%f714, %f198, %f713;
	fma.rn.f32 	%f715, %f700, %f1155, %f714;
	mul.f32 	%f716, %f711, %f711;
	fma.rn.f32 	%f717, %f710, %f710, %f716;
	fma.rn.f32 	%f718, %f712, %f712, %f717;
	fma.rn.f32 	%f719, %f715, %f715, %f718;
	sqrt.rn.f32 	%f720, %f719;
	rcp.rn.f32 	%f721, %f720;
	mul.f32 	%f1152, %f710, %f721;
	mul.f32 	%f1153, %f711, %f721;
	mul.f32 	%f1154, %f712, %f721;
	mul.f32 	%f1155, %f715, %f721;

BB2_35:
	mul.f32 	%f722, %f1153, %f1153;
	fma.rn.f32 	%f723, %f1152, %f1152, %f722;
	fma.rn.f32 	%f724, %f1154, %f1154, %f723;
	fma.rn.f32 	%f725, %f1155, %f1155, %f724;
	rcp.rn.f32 	%f726, %f725;
	mul.f32 	%f727, %f1152, %f726;
	mul.f32 	%f728, %f1153, %f726;
	mul.f32 	%f729, %f1154, %f726;
	mul.f32 	%f730, %f1155, %f726;
	mul.f32 	%f731, %f1152, %f727;
	mul.f32 	%f732, %f1153, %f728;
	mul.f32 	%f733, %f1154, %f729;
	mul.f32 	%f734, %f1152, %f728;
	mul.f32 	%f735, %f1154, %f730;
	mul.f32 	%f736, %f1152, %f729;
	mul.f32 	%f737, %f1153, %f730;
	mul.f32 	%f738, %f1153, %f729;
	mul.f32 	%f739, %f1152, %f730;
	sub.f32 	%f740, %f731, %f732;
	sub.f32 	%f741, %f740, %f733;
	fma.rn.f32 	%f742, %f1155, %f730, %f741;
	sub.f32 	%f743, %f734, %f735;
	add.f32 	%f744, %f743, %f743;
	add.f32 	%f745, %f736, %f737;
	add.f32 	%f746, %f745, %f745;
	add.f32 	%f747, %f734, %f735;
	add.f32 	%f748, %f747, %f747;
	sub.f32 	%f749, %f732, %f731;
	sub.f32 	%f750, %f749, %f733;
	fma.rn.f32 	%f751, %f1155, %f730, %f750;
	sub.f32 	%f752, %f738, %f739;
	add.f32 	%f753, %f752, %f752;
	sub.f32 	%f754, %f736, %f737;
	add.f32 	%f755, %f754, %f754;
	add.f32 	%f756, %f738, %f739;
	add.f32 	%f757, %f756, %f756;
	neg.f32 	%f758, %f731;
	sub.f32 	%f759, %f758, %f732;
	add.f32 	%f760, %f733, %f759;
	fma.rn.f32 	%f761, %f1155, %f730, %f760;
	mul.f32 	%f762, %f1148, %f742;
	fma.rn.f32 	%f763, %f1150, %f744, %f762;
	fma.rn.f32 	%f1164, %f1151, %f746, %f763;
	mul.f32 	%f764, %f1150, %f751;
	fma.rn.f32 	%f765, %f1148, %f748, %f764;
	fma.rn.f32 	%f1161, %f1151, %f753, %f765;
	mul.f32 	%f766, %f1150, %f757;
	fma.rn.f32 	%f767, %f1148, %f755, %f766;
	fma.rn.f32 	%f1158, %f1151, %f761, %f767;
	mul.f32 	%f768, %f1147, %f742;
	fma.rn.f32 	%f1163, %f1149, %f744, %f768;
	mul.f32 	%f769, %f1149, %f751;
	fma.rn.f32 	%f1160, %f1147, %f748, %f769;
	mul.f32 	%f770, %f1149, %f757;
	fma.rn.f32 	%f1157, %f1147, %f755, %f770;
	mul.f32 	%f1162, %f1146, %f742;
	mul.f32 	%f1159, %f1146, %f748;
	mul.f32 	%f1156, %f1146, %f755;

BB2_38:
	mul.f32 	%f802, %f1157, %f1161;
	mul.f32 	%f803, %f1158, %f1160;
	sub.f32 	%f804, %f803, %f802;
	mul.f32 	%f805, %f1162, %f804;
	mul.f32 	%f806, %f1156, %f1161;
	mul.f32 	%f807, %f1158, %f1159;
	sub.f32 	%f808, %f807, %f806;
	mul.f32 	%f809, %f808, %f1163;
	sub.f32 	%f810, %f805, %f809;
	mul.f32 	%f811, %f1156, %f1160;
	mul.f32 	%f812, %f1157, %f1159;
	sub.f32 	%f813, %f812, %f811;
	fma.rn.f32 	%f814, %f813, %f1164, %f810;
	rcp.rn.f32 	%f815, %f814;
	mul.f32 	%f1171, %f804, %f815;
	mul.f32 	%f816, %f1158, %f1163;
	mul.f32 	%f817, %f1157, %f1164;
	sub.f32 	%f818, %f817, %f816;
	mul.f32 	%f1172, %f815, %f818;
	mul.f32 	%f819, %f1160, %f1164;
	mul.f32 	%f820, %f1161, %f1163;
	sub.f32 	%f821, %f820, %f819;
	mul.f32 	%f1173, %f815, %f821;
	sub.f32 	%f822, %f806, %f807;
	mul.f32 	%f1168, %f822, %f815;
	mul.f32 	%f823, %f1156, %f1164;
	mul.f32 	%f824, %f1158, %f1162;
	sub.f32 	%f825, %f824, %f823;
	mul.f32 	%f1169, %f815, %f825;
	mul.f32 	%f826, %f1161, %f1162;
	mul.f32 	%f827, %f1159, %f1164;
	sub.f32 	%f828, %f827, %f826;
	mul.f32 	%f1170, %f815, %f828;
	mul.f32 	%f1165, %f813, %f815;
	mul.f32 	%f829, %f1157, %f1162;
	mul.f32 	%f830, %f1156, %f1163;
	sub.f32 	%f831, %f830, %f829;
	mul.f32 	%f1166, %f831, %f815;
	mul.f32 	%f832, %f1159, %f1163;
	mul.f32 	%f833, %f1160, %f1162;
	sub.f32 	%f834, %f833, %f832;
	mul.f32 	%f1167, %f834, %f815;
	bra.uni 	BB2_39;

BB2_28:
	setp.ne.s32	%p17, %r181, 1;
	mov.f32 	%f1166, %f1165;
	mov.f32 	%f1168, %f1165;
	mov.f32 	%f1169, %f1167;
	mov.f32 	%f1170, %f1165;
	mov.f32 	%f1171, %f1167;
	mov.f32 	%f1172, %f1165;
	mov.f32 	%f1173, %f1165;
	@%p17 bra 	BB2_39;

	// inline asm
	call (%rd172), _optix_get_static_transform_from_handle, (%rd170);
	// inline asm
	add.s64 	%rd427, %rd172, 64;

BB2_31:
	// inline asm
	cvta.to.global.u64 %rd176, %rd427;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r183,%r184,%r185,%r186}, [%rd176];
	// inline asm
	mov.b32 	 %f1171, %r183;
	mov.b32 	 %f1172, %r184;
	mov.b32 	 %f1173, %r185;
	add.s64 	%rd180, %rd427, 16;
	// inline asm
	cvta.to.global.u64 %rd179, %rd180;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r187,%r188,%r189,%r190}, [%rd179];
	// inline asm
	mov.b32 	 %f1168, %r187;
	mov.b32 	 %f1169, %r188;
	mov.b32 	 %f1170, %r189;
	add.s64 	%rd183, %rd427, 32;
	// inline asm
	cvta.to.global.u64 %rd182, %rd183;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r191,%r192,%r193,%r194}, [%rd182];
	// inline asm
	mov.b32 	 %f1165, %r191;
	mov.b32 	 %f1166, %r192;
	mov.b32 	 %f1167, %r193;

BB2_39:
	setp.eq.s32	%p21, %r498, 0;
	@%p21 bra 	BB2_40;
	bra.uni 	BB2_41;

BB2_40:
	mov.f32 	%f1145, %f1165;
	mov.f32 	%f1144, %f1166;
	mov.f32 	%f1143, %f1167;
	mov.f32 	%f1142, %f1168;
	mov.f32 	%f1141, %f1169;
	mov.f32 	%f1140, %f1170;
	mov.f32 	%f1139, %f1171;
	mov.f32 	%f1138, %f1172;
	mov.f32 	%f1137, %f1173;
	bra.uni 	BB2_42;

BB2_41:
	mul.f32 	%f835, %f1142, %f1172;
	fma.rn.f32 	%f836, %f1139, %f1171, %f835;
	fma.rn.f32 	%f278, %f1145, %f1173, %f836;
	mul.f32 	%f837, %f1141, %f1172;
	fma.rn.f32 	%f838, %f1138, %f1171, %f837;
	fma.rn.f32 	%f279, %f1144, %f1173, %f838;
	mul.f32 	%f839, %f1140, %f1172;
	fma.rn.f32 	%f840, %f1137, %f1171, %f839;
	fma.rn.f32 	%f280, %f1143, %f1173, %f840;
	mul.f32 	%f841, %f1142, %f1169;
	fma.rn.f32 	%f842, %f1139, %f1168, %f841;
	fma.rn.f32 	%f281, %f1145, %f1170, %f842;
	mul.f32 	%f843, %f1141, %f1169;
	fma.rn.f32 	%f844, %f1138, %f1168, %f843;
	fma.rn.f32 	%f282, %f1144, %f1170, %f844;
	mul.f32 	%f845, %f1140, %f1169;
	fma.rn.f32 	%f846, %f1137, %f1168, %f845;
	fma.rn.f32 	%f283, %f1143, %f1170, %f846;
	mul.f32 	%f847, %f1142, %f1166;
	fma.rn.f32 	%f848, %f1139, %f1165, %f847;
	fma.rn.f32 	%f1145, %f1145, %f1167, %f848;
	mul.f32 	%f849, %f1141, %f1166;
	fma.rn.f32 	%f850, %f1138, %f1165, %f849;
	fma.rn.f32 	%f1144, %f1144, %f1167, %f850;
	mul.f32 	%f851, %f1140, %f1166;
	fma.rn.f32 	%f852, %f1137, %f1165, %f851;
	fma.rn.f32 	%f1143, %f1143, %f1167, %f852;
	mov.f32 	%f1142, %f281;
	mov.f32 	%f1141, %f282;
	mov.f32 	%f1140, %f283;
	mov.f32 	%f1139, %f278;
	mov.f32 	%f1138, %f279;
	mov.f32 	%f1137, %f280;

BB2_42:
	add.s32 	%r498, %r498, 1;
	setp.lt.u32	%p22, %r498, %r28;
	@%p22 bra 	BB2_26;

	mul.f32 	%f853, %f170, %f1139;
	fma.rn.f32 	%f854, %f171, %f1142, %f853;
	fma.rn.f32 	%f1236, %f1238, %f1145, %f854;
	mul.f32 	%f855, %f170, %f1138;
	fma.rn.f32 	%f856, %f171, %f1141, %f855;
	fma.rn.f32 	%f1237, %f1238, %f1144, %f856;
	mul.f32 	%f857, %f170, %f1137;
	fma.rn.f32 	%f858, %f171, %f1140, %f857;
	fma.rn.f32 	%f1238, %f1238, %f1143, %f858;
	bra.uni 	BB2_44;

BB2_24:
	mov.f32 	%f1236, %f170;
	mov.f32 	%f1237, %f171;

BB2_44:
	ld.u64 	%rd22, [%rd31+40];
	setp.eq.s64	%p23, %rd22, 0;
	@%p23 bra 	BB2_67;

	setp.eq.s32	%p36, %r28, 0;
	ld.u16 	%rd291, [%rd31+52];
	setp.eq.s64	%p25, %rd291, 0;
	selp.b64	%rd292, 12, %rd291, %p25;
	mul.lo.s64 	%rd293, %rd292, %rd3;
	add.s64 	%rd294, %rd293, %rd22;
	mul.lo.s64 	%rd295, %rd292, %rd4;
	add.s64 	%rd296, %rd295, %rd22;
	mul.lo.s64 	%rd297, %rd292, %rd5;
	add.s64 	%rd298, %rd297, %rd22;
	mov.f32 	%f859, 0f3F800000;
	sub.f32 	%f860, %f859, %f443;
	sub.f32 	%f861, %f860, %f444;
	ld.f32 	%f862, [%rd294+8];
	ld.f32 	%f863, [%rd294+4];
	ld.f32 	%f864, [%rd294];
	ld.f32 	%f865, [%rd296+8];
	ld.f32 	%f866, [%rd296+4];
	ld.f32 	%f867, [%rd296];
	mul.f32 	%f868, %f443, %f867;
	mul.f32 	%f869, %f443, %f866;
	mul.f32 	%f870, %f443, %f865;
	fma.rn.f32 	%f871, %f861, %f864, %f868;
	fma.rn.f32 	%f872, %f861, %f863, %f869;
	fma.rn.f32 	%f873, %f861, %f862, %f870;
	ld.f32 	%f874, [%rd298+8];
	ld.f32 	%f875, [%rd298+4];
	ld.f32 	%f876, [%rd298];
	fma.rn.f32 	%f302, %f444, %f876, %f871;
	fma.rn.f32 	%f303, %f444, %f875, %f872;
	fma.rn.f32 	%f1234, %f444, %f874, %f873;
	@%p36 bra 	BB2_46;

	mov.u32 	%r499, 0;
	// inline asm
	call (%f877), _optix_get_ray_time, ();
	// inline asm

BB2_48:
	.pragma "nounroll";
	// inline asm
	call (%rd299), _optix_get_transform_list_handle, (%r499);
	// inline asm
	// inline asm
	call (%r331), _optix_get_transform_type_from_handle, (%rd299);
	// inline asm
	and.b32  	%r332, %r331, -2;
	setp.eq.s32	%p26, %r332, 2;
	@%p26 bra 	BB2_54;
	bra.uni 	BB2_49;

BB2_54:
	setp.eq.s32	%p29, %r331, 2;
	@%p29 bra 	BB2_58;
	bra.uni 	BB2_55;

BB2_58:
	// inline asm
	call (%rd373), _optix_get_matrix_motion_transform_from_handle, (%rd299);
	// inline asm
	// inline asm
	cvta.to.global.u64 %rd375, %rd373;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r420,%r421,%r422,%r423}, [%rd375];
	// inline asm
	mov.b32	{%rs12, %rs13}, %r422;
	add.s64 	%rd379, %rd373, 16;
	// inline asm
	cvta.to.global.u64 %rd378, %rd379;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r424,%r425,%r426,%r427}, [%rd378];
	// inline asm
	add.s64 	%rd382, %rd373, 32;
	// inline asm
	cvta.to.global.u64 %rd381, %rd382;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r428,%r429,%r430,%r431}, [%rd381];
	// inline asm
	add.s64 	%rd385, %rd373, 48;
	// inline asm
	cvta.to.global.u64 %rd384, %rd385;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r432,%r433,%r434,%r435}, [%rd384];
	// inline asm
	add.s64 	%rd388, %rd373, 64;
	// inline asm
	cvta.to.global.u64 %rd387, %rd388;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r436,%r437,%r438,%r439}, [%rd387];
	// inline asm
	add.s64 	%rd391, %rd373, 80;
	// inline asm
	cvta.to.global.u64 %rd390, %rd391;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r440,%r441,%r442,%r443}, [%rd390];
	// inline asm
	add.s64 	%rd394, %rd373, 96;
	// inline asm
	cvta.to.global.u64 %rd393, %rd394;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r444,%r445,%r446,%r447}, [%rd393];
	// inline asm
	add.s64 	%rd397, %rd373, 112;
	// inline asm
	cvta.to.global.u64 %rd396, %rd397;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r448,%r449,%r450,%r451}, [%rd396];
	// inline asm
	mov.b32 	 %f980, %r423;
	mov.b32 	 %f981, %r424;
	cvt.u32.u16	%r464, %rs12;
	add.s32 	%r465, %r464, -1;
	cvt.rn.f32.s32	%f982, %r465;
	sub.f32 	%f983, %f877, %f980;
	mul.f32 	%f984, %f983, %f982;
	sub.f32 	%f985, %f981, %f980;
	div.rn.f32 	%f986, %f984, %f985;
	min.f32 	%f987, %f982, %f986;
	mov.f32 	%f988, 0f00000000;
	max.f32 	%f989, %f988, %f987;
	cvt.rmi.f32.f32	%f990, %f989;
	cvt.rzi.s32.f32	%r466, %f990;
	cvt.s64.s32	%rd30, %r466;
	mul.wide.s32 	%rd408, %r466, 48;
	add.s64 	%rd400, %rd382, %rd408;
	// inline asm
	cvta.to.global.u64 %rd399, %rd400;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r452,%r453,%r454,%r455}, [%rd399];
	// inline asm
	mov.b32 	 %f1211, %r452;
	mov.b32 	 %f1212, %r453;
	mov.b32 	 %f1213, %r454;
	add.s64 	%rd403, %rd400, 16;
	// inline asm
	cvta.to.global.u64 %rd402, %rd403;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r456,%r457,%r458,%r459}, [%rd402];
	// inline asm
	mov.b32 	 %f1208, %r456;
	mov.b32 	 %f1209, %r457;
	mov.b32 	 %f1210, %r458;
	add.s64 	%rd406, %rd400, 32;
	// inline asm
	cvta.to.global.u64 %rd405, %rd406;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r460,%r461,%r462,%r463}, [%rd405];
	// inline asm
	sub.f32 	%f370, %f989, %f990;
	mov.b32 	 %f1205, %r460;
	mov.b32 	 %f1206, %r461;
	mov.b32 	 %f1207, %r462;
	setp.leu.f32	%p31, %f370, 0f00000000;
	@%p31 bra 	BB2_60;

	mul.lo.s64 	%rd418, %rd30, 48;
	add.s64 	%rd419, %rd373, %rd418;
	add.s64 	%rd410, %rd419, 80;
	// inline asm
	cvta.to.global.u64 %rd409, %rd410;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r467,%r468,%r469,%r470}, [%rd409];
	// inline asm
	mov.b32 	 %f991, %r467;
	mov.b32 	 %f992, %r468;
	mov.b32 	 %f993, %r469;
	add.s64 	%rd413, %rd419, 96;
	// inline asm
	cvta.to.global.u64 %rd412, %rd413;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r471,%r472,%r473,%r474}, [%rd412];
	// inline asm
	mov.b32 	 %f994, %r471;
	mov.b32 	 %f995, %r472;
	mov.b32 	 %f996, %r473;
	add.s64 	%rd416, %rd419, 112;
	// inline asm
	cvta.to.global.u64 %rd415, %rd416;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r475,%r476,%r477,%r478}, [%rd415];
	// inline asm
	mov.f32 	%f997, 0f3F800000;
	sub.f32 	%f998, %f997, %f370;
	mul.f32 	%f999, %f370, %f991;
	mul.f32 	%f1000, %f370, %f992;
	mul.f32 	%f1001, %f370, %f993;
	fma.rn.f32 	%f1211, %f998, %f1211, %f999;
	fma.rn.f32 	%f1212, %f998, %f1212, %f1000;
	fma.rn.f32 	%f1213, %f998, %f1213, %f1001;
	mul.f32 	%f1002, %f370, %f994;
	mul.f32 	%f1003, %f370, %f995;
	mul.f32 	%f1004, %f370, %f996;
	fma.rn.f32 	%f1208, %f998, %f1208, %f1002;
	fma.rn.f32 	%f1209, %f998, %f1209, %f1003;
	fma.rn.f32 	%f1210, %f998, %f1210, %f1004;
	mov.b32 	 %f1005, %r475;
	mov.b32 	 %f1006, %r476;
	mov.b32 	 %f1007, %r477;
	mul.f32 	%f1008, %f370, %f1005;
	mul.f32 	%f1009, %f370, %f1006;
	mul.f32 	%f1010, %f370, %f1007;
	fma.rn.f32 	%f1205, %f998, %f1205, %f1008;
	fma.rn.f32 	%f1206, %f998, %f1206, %f1009;
	fma.rn.f32 	%f1207, %f998, %f1207, %f1010;
	bra.uni 	BB2_60;

BB2_49:
	mov.f32 	%f1214, 0f00000000;
	setp.eq.s32	%p27, %r331, 4;
	@%p27 bra 	BB2_52;
	bra.uni 	BB2_50;

BB2_52:
	// inline asm
	call (%rd428), _optix_get_instance_inverse_transform_from_handle, (%rd299);
	// inline asm
	bra.uni 	BB2_53;

BB2_55:
	// inline asm
	call (%rd314), _optix_get_srt_motion_transform_from_handle, (%rd299);
	// inline asm
	// inline asm
	cvta.to.global.u64 %rd316, %rd314;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r345,%r346,%r347,%r348}, [%rd316];
	// inline asm
	mov.b32	{%rs10, %rs11}, %r347;
	add.s64 	%rd320, %rd314, 16;
	// inline asm
	cvta.to.global.u64 %rd319, %rd320;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r349,%r350,%r351,%r352}, [%rd319];
	// inline asm
	add.s64 	%rd323, %rd314, 32;
	// inline asm
	cvta.to.global.u64 %rd322, %rd323;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r353,%r354,%r355,%r356}, [%rd322];
	// inline asm
	add.s64 	%rd326, %rd314, 48;
	// inline asm
	cvta.to.global.u64 %rd325, %rd326;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r357,%r358,%r359,%r360}, [%rd325];
	// inline asm
	add.s64 	%rd329, %rd314, 64;
	// inline asm
	cvta.to.global.u64 %rd328, %rd329;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r361,%r362,%r363,%r364}, [%rd328];
	// inline asm
	add.s64 	%rd332, %rd314, 80;
	// inline asm
	cvta.to.global.u64 %rd331, %rd332;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r365,%r366,%r367,%r368}, [%rd331];
	// inline asm
	add.s64 	%rd335, %rd314, 96;
	// inline asm
	cvta.to.global.u64 %rd334, %rd335;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r369,%r370,%r371,%r372}, [%rd334];
	// inline asm
	add.s64 	%rd338, %rd314, 112;
	// inline asm
	cvta.to.global.u64 %rd337, %rd338;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r373,%r374,%r375,%r376}, [%rd337];
	// inline asm
	add.s64 	%rd341, %rd314, 128;
	// inline asm
	cvta.to.global.u64 %rd340, %rd341;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r377,%r378,%r379,%r380}, [%rd340];
	// inline asm
	add.s64 	%rd344, %rd314, 144;
	// inline asm
	cvta.to.global.u64 %rd343, %rd344;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r381,%r382,%r383,%r384}, [%rd343];
	// inline asm
	mov.b32 	 %f888, %r348;
	mov.b32 	 %f889, %r349;
	cvt.u32.u16	%r401, %rs10;
	add.s32 	%r402, %r401, -1;
	cvt.rn.f32.s32	%f890, %r402;
	sub.f32 	%f891, %f877, %f888;
	mul.f32 	%f892, %f891, %f890;
	sub.f32 	%f893, %f889, %f888;
	div.rn.f32 	%f894, %f892, %f893;
	min.f32 	%f895, %f890, %f894;
	mov.f32 	%f896, 0f00000000;
	max.f32 	%f897, %f896, %f895;
	cvt.rmi.f32.f32	%f898, %f897;
	cvt.rzi.s32.f32	%r403, %f898;
	cvt.s64.s32	%rd28, %r403;
	mul.wide.s32 	%rd358, %r403, 64;
	add.s64 	%rd347, %rd323, %rd358;
	// inline asm
	cvta.to.global.u64 %rd346, %rd347;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r385,%r386,%r387,%r388}, [%rd346];
	// inline asm
	mov.b32 	 %f1195, %r385;
	mov.b32 	 %f1196, %r386;
	mov.b32 	 %f1197, %r387;
	add.s64 	%rd350, %rd347, 16;
	// inline asm
	cvta.to.global.u64 %rd349, %rd350;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r389,%r390,%r391,%r392}, [%rd349];
	// inline asm
	mov.b32 	 %f1198, %r389;
	mov.b32 	 %f1199, %r390;
	mov.b32 	 %f1200, %r392;
	add.s64 	%rd353, %rd347, 32;
	// inline asm
	cvta.to.global.u64 %rd352, %rd353;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r393,%r394,%r395,%r396}, [%rd352];
	// inline asm
	sub.f32 	%f330, %f897, %f898;
	mov.b32 	 %f1201, %r394;
	mov.b32 	 %f1202, %r395;
	mov.b32 	 %f1203, %r396;
	add.s64 	%rd356, %rd347, 48;
	// inline asm
	cvta.to.global.u64 %rd355, %rd356;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r397,%r398,%r399,%r400}, [%rd355];
	// inline asm
	mov.b32 	 %f1204, %r397;
	setp.leu.f32	%p30, %f330, 0f00000000;
	@%p30 bra 	BB2_57;

	shl.b64 	%rd371, %rd28, 6;
	add.s64 	%rd372, %rd371, %rd314;
	add.s64 	%rd360, %rd372, 96;
	// inline asm
	cvta.to.global.u64 %rd359, %rd360;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r404,%r405,%r406,%r407}, [%rd359];
	// inline asm
	mov.b32 	 %f899, %r404;
	mov.b32 	 %f900, %r405;
	mov.b32 	 %f901, %r406;
	add.s64 	%rd363, %rd372, 112;
	// inline asm
	cvta.to.global.u64 %rd362, %rd363;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r408,%r409,%r410,%r411}, [%rd362];
	// inline asm
	mov.b32 	 %f902, %r408;
	mov.b32 	 %f903, %r409;
	mov.b32 	 %f904, %r411;
	add.s64 	%rd366, %rd372, 128;
	// inline asm
	cvta.to.global.u64 %rd365, %rd366;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r412,%r413,%r414,%r415}, [%rd365];
	// inline asm
	mov.b32 	 %f905, %r413;
	mov.b32 	 %f906, %r414;
	mov.b32 	 %f907, %r415;
	add.s64 	%rd369, %rd372, 144;
	// inline asm
	cvta.to.global.u64 %rd368, %rd369;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r416,%r417,%r418,%r419}, [%rd368];
	// inline asm
	mov.f32 	%f908, 0f3F800000;
	sub.f32 	%f909, %f908, %f330;
	mul.f32 	%f910, %f330, %f899;
	mul.f32 	%f911, %f330, %f900;
	mul.f32 	%f912, %f330, %f901;
	fma.rn.f32 	%f1195, %f909, %f1195, %f910;
	fma.rn.f32 	%f1196, %f909, %f1196, %f911;
	fma.rn.f32 	%f1197, %f909, %f1197, %f912;
	mul.f32 	%f913, %f330, %f902;
	mul.f32 	%f914, %f330, %f903;
	mul.f32 	%f915, %f330, %f904;
	fma.rn.f32 	%f1198, %f909, %f1198, %f913;
	fma.rn.f32 	%f1199, %f909, %f1199, %f914;
	fma.rn.f32 	%f1200, %f909, %f1200, %f915;
	mul.f32 	%f916, %f330, %f905;
	mul.f32 	%f917, %f330, %f906;
	mul.f32 	%f918, %f330, %f907;
	fma.rn.f32 	%f919, %f909, %f1201, %f916;
	fma.rn.f32 	%f920, %f909, %f1202, %f917;
	fma.rn.f32 	%f921, %f909, %f1203, %f918;
	mov.b32 	 %f922, %r416;
	mul.f32 	%f923, %f330, %f922;
	fma.rn.f32 	%f924, %f909, %f1204, %f923;
	mul.f32 	%f925, %f920, %f920;
	fma.rn.f32 	%f926, %f919, %f919, %f925;
	fma.rn.f32 	%f927, %f921, %f921, %f926;
	fma.rn.f32 	%f928, %f924, %f924, %f927;
	sqrt.rn.f32 	%f929, %f928;
	rcp.rn.f32 	%f930, %f929;
	mul.f32 	%f1201, %f919, %f930;
	mul.f32 	%f1202, %f920, %f930;
	mul.f32 	%f1203, %f921, %f930;
	mul.f32 	%f1204, %f924, %f930;

BB2_57:
	mul.f32 	%f931, %f1202, %f1202;
	fma.rn.f32 	%f932, %f1201, %f1201, %f931;
	fma.rn.f32 	%f933, %f1203, %f1203, %f932;
	fma.rn.f32 	%f934, %f1204, %f1204, %f933;
	rcp.rn.f32 	%f935, %f934;
	mul.f32 	%f936, %f1201, %f935;
	mul.f32 	%f937, %f1202, %f935;
	mul.f32 	%f938, %f1203, %f935;
	mul.f32 	%f939, %f1204, %f935;
	mul.f32 	%f940, %f1201, %f936;
	mul.f32 	%f941, %f1202, %f937;
	mul.f32 	%f942, %f1203, %f938;
	mul.f32 	%f943, %f1201, %f937;
	mul.f32 	%f944, %f1203, %f939;
	mul.f32 	%f945, %f1201, %f938;
	mul.f32 	%f946, %f1202, %f939;
	mul.f32 	%f947, %f1202, %f938;
	mul.f32 	%f948, %f1201, %f939;
	sub.f32 	%f949, %f940, %f941;
	sub.f32 	%f950, %f949, %f942;
	fma.rn.f32 	%f951, %f1204, %f939, %f950;
	sub.f32 	%f952, %f943, %f944;
	add.f32 	%f953, %f952, %f952;
	add.f32 	%f954, %f945, %f946;
	add.f32 	%f955, %f954, %f954;
	add.f32 	%f956, %f943, %f944;
	add.f32 	%f957, %f956, %f956;
	sub.f32 	%f958, %f941, %f940;
	sub.f32 	%f959, %f958, %f942;
	fma.rn.f32 	%f960, %f1204, %f939, %f959;
	sub.f32 	%f961, %f947, %f948;
	add.f32 	%f962, %f961, %f961;
	sub.f32 	%f963, %f945, %f946;
	add.f32 	%f964, %f963, %f963;
	add.f32 	%f965, %f947, %f948;
	add.f32 	%f966, %f965, %f965;
	neg.f32 	%f967, %f940;
	sub.f32 	%f968, %f967, %f941;
	add.f32 	%f969, %f942, %f968;
	fma.rn.f32 	%f970, %f1204, %f939, %f969;
	mul.f32 	%f971, %f1197, %f951;
	fma.rn.f32 	%f972, %f1199, %f953, %f971;
	fma.rn.f32 	%f1213, %f1200, %f955, %f972;
	mul.f32 	%f973, %f1199, %f960;
	fma.rn.f32 	%f974, %f1197, %f957, %f973;
	fma.rn.f32 	%f1210, %f1200, %f962, %f974;
	mul.f32 	%f975, %f1199, %f966;
	fma.rn.f32 	%f976, %f1197, %f964, %f975;
	fma.rn.f32 	%f1207, %f1200, %f970, %f976;
	mul.f32 	%f977, %f1196, %f951;
	fma.rn.f32 	%f1212, %f1198, %f953, %f977;
	mul.f32 	%f978, %f1198, %f960;
	fma.rn.f32 	%f1209, %f1196, %f957, %f978;
	mul.f32 	%f979, %f1198, %f966;
	fma.rn.f32 	%f1206, %f1196, %f964, %f979;
	mul.f32 	%f1211, %f1195, %f951;
	mul.f32 	%f1208, %f1195, %f957;
	mul.f32 	%f1205, %f1195, %f964;

BB2_60:
	mul.f32 	%f1011, %f1206, %f1210;
	mul.f32 	%f1012, %f1207, %f1209;
	sub.f32 	%f1013, %f1012, %f1011;
	mul.f32 	%f1014, %f1211, %f1013;
	mul.f32 	%f1015, %f1205, %f1210;
	mul.f32 	%f1016, %f1207, %f1208;
	sub.f32 	%f1017, %f1016, %f1015;
	mul.f32 	%f1018, %f1017, %f1212;
	sub.f32 	%f1019, %f1014, %f1018;
	mul.f32 	%f1020, %f1205, %f1209;
	mul.f32 	%f1021, %f1206, %f1208;
	sub.f32 	%f1022, %f1021, %f1020;
	fma.rn.f32 	%f1023, %f1022, %f1213, %f1019;
	rcp.rn.f32 	%f1024, %f1023;
	mul.f32 	%f1220, %f1013, %f1024;
	mul.f32 	%f1025, %f1207, %f1212;
	mul.f32 	%f1026, %f1206, %f1213;
	sub.f32 	%f1027, %f1026, %f1025;
	mul.f32 	%f1221, %f1024, %f1027;
	mul.f32 	%f1028, %f1209, %f1213;
	mul.f32 	%f1029, %f1210, %f1212;
	sub.f32 	%f1030, %f1029, %f1028;
	mul.f32 	%f1222, %f1024, %f1030;
	sub.f32 	%f1031, %f1015, %f1016;
	mul.f32 	%f1217, %f1031, %f1024;
	mul.f32 	%f1032, %f1205, %f1213;
	mul.f32 	%f1033, %f1207, %f1211;
	sub.f32 	%f1034, %f1033, %f1032;
	mul.f32 	%f1218, %f1024, %f1034;
	mul.f32 	%f1035, %f1210, %f1211;
	mul.f32 	%f1036, %f1208, %f1213;
	sub.f32 	%f1037, %f1036, %f1035;
	mul.f32 	%f1219, %f1024, %f1037;
	mul.f32 	%f1214, %f1022, %f1024;
	mul.f32 	%f1038, %f1206, %f1211;
	mul.f32 	%f1039, %f1205, %f1212;
	sub.f32 	%f1040, %f1039, %f1038;
	mul.f32 	%f1215, %f1040, %f1024;
	mul.f32 	%f1041, %f1208, %f1212;
	mul.f32 	%f1042, %f1209, %f1211;
	sub.f32 	%f1043, %f1042, %f1041;
	mul.f32 	%f1216, %f1043, %f1024;
	bra.uni 	BB2_61;

BB2_50:
	setp.ne.s32	%p28, %r331, 1;
	mov.f32 	%f1215, %f1214;
	mov.f32 	%f1216, %f859;
	mov.f32 	%f1217, %f1214;
	mov.f32 	%f1218, %f859;
	mov.f32 	%f1219, %f1214;
	mov.f32 	%f1220, %f859;
	mov.f32 	%f1221, %f1214;
	mov.f32 	%f1222, %f1214;
	@%p28 bra 	BB2_61;

	// inline asm
	call (%rd301), _optix_get_static_transform_from_handle, (%rd299);
	// inline asm
	add.s64 	%rd428, %rd301, 64;

BB2_53:
	// inline asm
	cvta.to.global.u64 %rd305, %rd428;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r333,%r334,%r335,%r336}, [%rd305];
	// inline asm
	mov.b32 	 %f1220, %r333;
	mov.b32 	 %f1221, %r334;
	mov.b32 	 %f1222, %r335;
	add.s64 	%rd309, %rd428, 16;
	// inline asm
	cvta.to.global.u64 %rd308, %rd309;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r337,%r338,%r339,%r340}, [%rd308];
	// inline asm
	mov.b32 	 %f1217, %r337;
	mov.b32 	 %f1218, %r338;
	mov.b32 	 %f1219, %r339;
	add.s64 	%rd312, %rd428, 32;
	// inline asm
	cvta.to.global.u64 %rd311, %rd312;
	// inline asm
	// inline asm
	ld.global.v4.u32 {%r341,%r342,%r343,%r344}, [%rd311];
	// inline asm
	mov.b32 	 %f1214, %r341;
	mov.b32 	 %f1215, %r342;
	mov.b32 	 %f1216, %r343;

BB2_61:
	setp.eq.s32	%p32, %r499, 0;
	@%p32 bra 	BB2_62;
	bra.uni 	BB2_63;

BB2_62:
	mov.f32 	%f1194, %f1214;
	mov.f32 	%f1193, %f1215;
	mov.f32 	%f1192, %f1216;
	mov.f32 	%f1191, %f1217;
	mov.f32 	%f1190, %f1218;
	mov.f32 	%f1189, %f1219;
	mov.f32 	%f1188, %f1220;
	mov.f32 	%f1187, %f1221;
	mov.f32 	%f1186, %f1222;
	bra.uni 	BB2_64;

BB2_63:
	mul.f32 	%f1044, %f1191, %f1221;
	fma.rn.f32 	%f1045, %f1188, %f1220, %f1044;
	fma.rn.f32 	%f410, %f1194, %f1222, %f1045;
	mul.f32 	%f1046, %f1190, %f1221;
	fma.rn.f32 	%f1047, %f1187, %f1220, %f1046;
	fma.rn.f32 	%f411, %f1193, %f1222, %f1047;
	mul.f32 	%f1048, %f1189, %f1221;
	fma.rn.f32 	%f1049, %f1186, %f1220, %f1048;
	fma.rn.f32 	%f412, %f1192, %f1222, %f1049;
	mul.f32 	%f1050, %f1191, %f1218;
	fma.rn.f32 	%f1051, %f1188, %f1217, %f1050;
	fma.rn.f32 	%f413, %f1194, %f1219, %f1051;
	mul.f32 	%f1052, %f1190, %f1218;
	fma.rn.f32 	%f1053, %f1187, %f1217, %f1052;
	fma.rn.f32 	%f414, %f1193, %f1219, %f1053;
	mul.f32 	%f1054, %f1189, %f1218;
	fma.rn.f32 	%f1055, %f1186, %f1217, %f1054;
	fma.rn.f32 	%f415, %f1192, %f1219, %f1055;
	mul.f32 	%f1056, %f1191, %f1215;
	fma.rn.f32 	%f1057, %f1188, %f1214, %f1056;
	fma.rn.f32 	%f1194, %f1194, %f1216, %f1057;
	mul.f32 	%f1058, %f1190, %f1215;
	fma.rn.f32 	%f1059, %f1187, %f1214, %f1058;
	fma.rn.f32 	%f1193, %f1193, %f1216, %f1059;
	mul.f32 	%f1060, %f1189, %f1215;
	fma.rn.f32 	%f1061, %f1186, %f1214, %f1060;
	fma.rn.f32 	%f1192, %f1192, %f1216, %f1061;
	mov.f32 	%f1191, %f413;
	mov.f32 	%f1190, %f414;
	mov.f32 	%f1189, %f415;
	mov.f32 	%f1188, %f410;
	mov.f32 	%f1187, %f411;
	mov.f32 	%f1186, %f412;

BB2_64:
	add.s32 	%r499, %r499, 1;
	setp.lt.u32	%p33, %r499, %r28;
	@%p33 bra 	BB2_48;

	mul.f32 	%f1062, %f302, %f1188;
	fma.rn.f32 	%f1063, %f303, %f1191, %f1062;
	fma.rn.f32 	%f1232, %f1234, %f1194, %f1063;
	mul.f32 	%f1064, %f302, %f1187;
	fma.rn.f32 	%f1065, %f303, %f1190, %f1064;
	fma.rn.f32 	%f1233, %f1234, %f1193, %f1065;
	mul.f32 	%f1066, %f302, %f1186;
	fma.rn.f32 	%f1067, %f303, %f1189, %f1066;
	fma.rn.f32 	%f1234, %f1234, %f1192, %f1067;
	bra.uni 	BB2_66;

BB2_46:
	mov.f32 	%f1232, %f302;
	mov.f32 	%f1233, %f303;

BB2_66:
	mul.f32 	%f1068, %f1233, %f1233;
	fma.rn.f32 	%f1069, %f1232, %f1232, %f1068;
	fma.rn.f32 	%f1070, %f1234, %f1234, %f1069;
	sqrt.rn.f32 	%f1071, %f1070;
	rcp.rn.f32 	%f1072, %f1071;
	mul.f32 	%f1236, %f1232, %f1072;
	mul.f32 	%f1237, %f1233, %f1072;
	mul.f32 	%f1238, %f1234, %f1072;

BB2_67:
	cvt.rn.f32.u32	%f1073, %r1;
	mov.b32 	 %r479, %f1073;
	// inline asm
	call _optix_set_payload_0, (%r479);
	// inline asm
	mov.b32 	 %r480, %f1236;
	// inline asm
	call _optix_set_payload_1, (%r480);
	// inline asm
	mov.b32 	 %r481, %f1237;
	// inline asm
	call _optix_set_payload_2, (%r481);
	// inline asm
	mov.b32 	 %r482, %f1238;
	// inline asm
	call _optix_set_payload_3, (%r482);
	// inline asm
	// inline asm
	call (%r483), _optix_get_launch_index_x, ();
	// inline asm
	// inline asm
	call (%r484), _optix_get_launch_index_y, ();
	// inline asm
	// inline asm
	call (%r485), _optix_get_launch_index_z, ();
	// inline asm
	// inline asm
	call (%r486), _optix_get_launch_dimension_x, ();
	// inline asm
	// inline asm
	call (%r487), _optix_get_launch_dimension_y, ();
	// inline asm
	mad.lo.s32 	%r490, %r487, %r485, %r484;
	mad.lo.s32 	%r491, %r490, %r486, %r483;
	ld.const.u64 	%rd420, [params+8];
	cvta.to.global.u64 	%rd421, %rd420;
	mul.wide.u32 	%rd422, %r491, 32;
	add.s64 	%rd423, %rd421, %rd422;
	ld.global.f32 	%f1074, [%rd423+8];
	sub.f32 	%f1075, %f1235, %f1074;
	setp.lt.f32	%p34, %f1075, 0f00000000;
	neg.f32 	%f1076, %f1075;
	selp.f32	%f1077, %f1076, %f1075, %p34;
	mov.b32 	 %r489, %f1077;
	// inline asm
	call _optix_set_payload_4, (%r489);
	// inline asm
	ret;
}


